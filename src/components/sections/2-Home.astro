---
import profilePhoto from '../../assets/BrianPhoto.svg';
import devPhoto from '../../assets/13rianPhoto.svg';
import portfolioQR from '../../assets/PortfolioQR.svg';
const { t } = Astro.props;
---

<section class="home-section">
  <div class="card-container">
    <div class="business-card" onclick="this.classList.toggle('flipped')">

      <!-- FRONT SIDE -->
      <div class="card-front">
        <!-- Card Header with Company Branding -->
        <div class="card-header">
          <div class="company-logo">
            <div class="logo-circle">
              <img src={devPhoto.src} alt="Logo 13rian Vargas" />
            </div>
          </div>
          <div class="company-info">
            <span class="company-name">13rian Vargas</span>
          </div>
          <div class="flip-hint">
            <span class="flip-text">{t("home.clickToFlip")}</span>
            <div class="flip-icon">⟲</div>
          </div>
        </div>
        
        <!-- Card Body with Profile -->
        <div class="card-body">
          <div class="profile-section">
            <div class="profile-photo">
              <img src={profilePhoto.src} alt={`Foto de perfil de Brian Vargas`} />
            </div>
            <div class="profile-info">
              <h1 class="employee-name">{t("home.name")}</h1>
              <h2 class="employee-role">{t("home.role")}</h2>
              <div class="employee-id">ID: 000-013</div>
            </div>
          </div>
        </div>
        
        <!-- Card Footer with Contact Links -->
        <div class="card-footer">
          <div class="contact-links">
            <a class="contact-btn linkedin" href="#" target="_blank" aria-label="LinkedIn">
              <img src="/linkedin.svg" alt="LinkedIn" />
              <span>LinkedIn</span>
            </a>
            <a class="contact-btn github" href="#" target="_blank" aria-label="GitHub">
              <img src="/github.svg" alt="GitHub" />
              <span>GitHub</span>
            </a>
          </div>
          <div class="card-security">
            <div class="security-chip"></div>
            <span class="security-text">{t("home.securityText")}</span>
          </div>
        </div>
      </div>

      <!-- BACK SIDE -->
      <div class="card-back">
        <!-- Back Header -->
        <div class="card-header back-header">
          <div class="back-logo">
            <div class="qr-code">
              <div class="qr-pattern"></div>
            </div>
          </div>
          <div class="back-info">
            <span class="back-title">{t("home.professionalDetails")}</span>
          </div>
          <div class="flip-hint">
            <span class="flip-text">{t("home.clickToFlip")}</span>
            <div class="flip-icon">⟲</div>
          </div>
        </div>
        
        <!-- Back Body - Content Area -->
        <div class="card-body">
          <!-- QR Code Section -->
          <div class="qr-section">
            <div class="qr-placeholder">
              <!-- Portfolio QR Code - Scan to access portfolio -->
              <img src={portfolioQR.src} alt={t("home.qrInstruction")} class="qr-image" />
            </div>
            <p class="qr-instruction">{t("home.qrInstruction")}</p>
          </div>
          
          <!-- Personal Information -->
          <div class="personal-info">
            <div class="info-item">
              <span class="info-text">{t("home.passion")}</span>
            </div>
            <div class="info-item">
              <span class="info-text">{t("home.education")}</span>
            </div>
            <div class="info-item">
              <span class="info-text">{t("home.leadership")}</span>
            </div>
          </div>
        </div>
        
        <!-- Back Footer -->
        <div class="card-footer">
          <div class="contact-details">
            <div class="contact-item">
              <span class="contact-label">{t("home.location")}</span>
              <span class="contact-value">{t("home.locationValue")}</span>
            </div>
            <div class="contact-item">
              <span class="contact-label">{t("home.workMode")}</span>
              <span class="contact-value">{t("home.workModeValue")}</span>
            </div>
          </div>
          <div class="card-security">
            <div class="security-badge">
              <span class="badge-text">{t("home.badgeText")}</span>
            </div>
            <span class="issue-date">{t("home.issueDate")}</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  /**
   * ========================================
   * BUSINESS CARD FLIP FUNCTIONALITY
   * ========================================
   * 
   * This script handles the dynamic behavior of the business card component:
   * - Device detection (mobile vs desktop)
   * - Internationalization support for flip hints
   * - Adaptive text updates based on user interaction method
   * - Responsive behavior across different screen sizes
   * 
   * Features:
   * - Automatic device type detection using multiple criteria
   * - Language-aware text switching (ES/EN support)
   * - Real-time updates on window resize and language changes
   * - Modular architecture for easy maintenance and extension
   */

  // ========================================
  // CONFIGURATION CONSTANTS
  // Centralized configuration for easy maintenance
  // ========================================
  const CONFIG = {
    // Device detection parameters
    DEVICE_DETECTION: {
      mobileBreakpoint: 768,
      mobileUserAgents: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i,
      touchPointsThreshold: 1
    },
    
    // Internationalized text content for different languages and device types
    FLIP_TEXTS: {
      es: {
        mobile: 'Toca para voltear',
        desktop: 'Clic para voltear'
      },
      en: {
        mobile: 'Tap to flip',
        desktop: 'Click to flip'
      }
    },
    
    // DOM element selectors
    SELECTORS: {
      flipText: '.flip-text',
      documentElement: document.documentElement
    },
    
    // Default fallback values for error handling
    DEFAULTS: {
      language: 'es',
      deviceType: 'desktop'
    }
  };

  /**
   * ========================================
   * DEVICE DETECTION MODULE
   * ========================================
   * Handles detection of user's device type for adaptive UI
   */
  const DeviceDetector = {
    /**
     * Determines if the current device is mobile using multiple detection methods
     * @returns {boolean} True if mobile device is detected
     */
    isMobile() {
      const { mobileUserAgents, mobileBreakpoint, touchPointsThreshold } = CONFIG.DEVICE_DETECTION;
      
      return (
        // User agent string detection
        mobileUserAgents.test(navigator.userAgent) ||
        // Touch capability detection
        (navigator.maxTouchPoints && navigator.maxTouchPoints > touchPointsThreshold) ||
        // Screen width detection
        window.innerWidth <= mobileBreakpoint
      );
    },

    /**
     * Returns device type as string for text lookup
     * @returns {'mobile' | 'desktop'} Either 'mobile' or 'desktop'
     */
    getDeviceType(): 'mobile' | 'desktop' {
      return this.isMobile() ? 'mobile' : 'desktop';
    }
  };

  /**
   * ========================================
   * LANGUAGE MANAGEMENT MODULE
   * ========================================
   * Handles language detection and localized text retrieval
   */
  const LanguageManager = {
    /**
     * Retrieves the current document language from HTML lang attribute
     * @returns {string} Language code (e.g., 'es', 'en')
     */
    getCurrentLanguage() {
      return CONFIG.SELECTORS.documentElement.lang || CONFIG.DEFAULTS.language;
    },

    /**
     * Gets the appropriate flip text based on current language and device type
     * Uses type-safe lookups to prevent runtime errors
     * @param {('mobile'|'desktop')} deviceType - Either 'mobile' or 'desktop'
     * @returns {string} Localized flip instruction text
     */
    getFlipText(deviceType: 'mobile' | 'desktop'): string {
      const currentLang = this.getCurrentLanguage();
      const flipTexts = CONFIG.FLIP_TEXTS;
      
      // Type-safe text retrieval with fallback handling
      if (currentLang === 'es' && flipTexts.es) {
        return deviceType === 'mobile' ? flipTexts.es.mobile : flipTexts.es.desktop;
      } else if (currentLang === 'en' && flipTexts.en) {
        return deviceType === 'mobile' ? flipTexts.en.mobile : flipTexts.en.desktop;
      } else {
        // Fallback to Spanish if language not found
        return deviceType === 'mobile' ? flipTexts.es.mobile : flipTexts.es.desktop;
      }
    }
  };

  /**
   * ========================================
   * FLIP TEXT UPDATER MODULE
   * ========================================
   * Manages dynamic text updates for flip hint elements
   */
  const FlipTextUpdater = {
    /**
     * Updates all flip text elements with appropriate content
     * Based on current device type and document language
     */
    updateAll() {
      const flipTextElements = document.querySelectorAll(CONFIG.SELECTORS.flipText);
      const deviceType = DeviceDetector.getDeviceType();
      const newText = LanguageManager.getFlipText(deviceType);

      // Update each flip text element found in the DOM
      flipTextElements.forEach(element => {
        if (element && element.textContent !== newText) {
          element.textContent = newText;
        }
      });
    },

    /**
     * Initializes all event listeners for dynamic text updates
     * Sets up observers for DOM changes, window resize, and language changes
     */
    initializeEventListeners() {
      // Update text when DOM content is fully loaded
      document.addEventListener('DOMContentLoaded', () => this.updateAll());
      
      // Update on window resize to handle orientation changes and responsive breakpoints
      window.addEventListener('resize', () => this.updateAll());
      
      // Set up mutation observer for language attribute changes
      this.initializeLanguageObserver();
    },

    /**
     * Sets up a MutationObserver to watch for language attribute changes
     * Automatically updates text when the document language is switched
     */
    initializeLanguageObserver() {
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.type === 'attributes' && mutation.attributeName === 'lang') {
            // Language changed, update all flip text elements
            this.updateAll();
          }
        });
      });

      // Observe the document element for lang attribute changes
      observer.observe(CONFIG.SELECTORS.documentElement, {
        attributes: true,
        attributeFilter: ['lang']
      });
    }
  };

  // ========================================
  // MODULE INITIALIZATION
  // Start the flip text functionality when script loads
  // ========================================
  FlipTextUpdater.initializeEventListeners();
</script>

<style>
  /* ========================================
   * CSS CUSTOM PROPERTIES
   * Centralized variables for consistency and maintainability
   * All visual aspects can be controlled from this section
   * ======================================== */
  :root {
    /* ===== CARD DIMENSIONS & LAYOUT ===== */
    /* Base card dimensions - mobile values are overridden in media queries */
    --card-width: 400px;
    --card-height: 600px;
    --card-perspective: 1000px;
    --card-border-radius: 20px;
    
    /* 3D rotation angles for different interaction states */
    --card-idle-rotate-y: -5deg;
    --card-idle-rotate-x: 2deg;
    --card-hover-rotate-y: -8deg;
    --card-hover-rotate-x: 3deg;
    --card-hover-scale: 1.02;
    --card-flipped-rotate-y: 175deg;
    --card-flipped-hover-rotate-y: 178deg;
    
    /* ===== SPACING SYSTEM ===== */
    /* Consistent spacing hierarchy throughout the component */
    --section-padding: 2rem;
    --floating-header-offset: 160px;
    --header-padding: 1.5rem;
    --header-min-height: 90px;
    --body-padding: 1.2rem 1.5rem;
    --footer-padding: 1rem;
    --element-gap: 1rem;
    --element-gap-small: 0.5rem;
    --element-gap-large: 1.5rem;
    
    /* ===== COMPONENT DIMENSIONS ===== */
    /* Sizes for various UI elements */
    --logo-size: 50px;
    --profile-photo-size: 120px;
    --profile-photo-border-radius: 15px;
    --security-chip-width: 30px;
    --security-chip-height: 20px;
    --contact-btn-padding: 0.8rem;
    --contact-icon-size: 18px;
    
    /* QR code and related elements */
    --qr-placeholder-size: 120px;
    --qr-border-radius: 12px;
    
    /* ===== TYPOGRAPHY SCALE ===== */
    /* Consistent font sizing across all text elements */
    --text-company-name: 1.2rem;
    --text-employee-name: 1.8rem;
    --text-employee-role: 1.1rem;
    --text-employee-id: 0.9rem;
    --text-flip-hint: 0.85rem;
    --text-contact-btn: 0.9rem;
    --text-contact-item: 0.9rem;
    --text-security: 0.7rem;
    --text-qr-instruction: 0.8rem;
    --text-info-item: 0.9rem;
    
    /* Icon and symbol sizes */
    --flip-icon-size: 2rem;
    
    /* ===== ANIMATION & TRANSITION SYSTEM ===== */
    /* Consistent timing and easing for all animations */
    --transition-card: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    --transition-elements: all 0.3s ease;
    --transition-hover: all 0.2s ease-out;
    --animation-duration-pulse: 2s;
    --animation-duration-rotate: 2s;
    --animation-duration-shine: 3s;
    
    /* ===== SHADOW SYSTEM ===== */
    /* Layered shadow effects for depth and elevation */
    --shadow-card: 0 20px 40px var(--color-shadow), 0 0 0 1px var(--color-border), inset 0 1px 0 rgba(255, 255, 255, 0.1);
    --shadow-element: 0 8px 16px var(--color-shadow);
    --shadow-hover: 0 4px 8px var(--color-shadow);
    --shadow-contact-btn: 0 2px 8px var(--color-shadow);
    
    /* ===== GRADIENT DEFINITIONS ===== */
    /* Reusable gradient patterns for consistency */
    --gradient-header: linear-gradient(135deg, var(--color-accent) 0%, var(--color-accent-hover) 100%);
    --gradient-back-header: linear-gradient(135deg, #6b46c1 0%, #8b5cf6 100%);
    --gradient-security-chip: linear-gradient(135deg, #ffd700, #ffed4e);
    --gradient-security-badge: linear-gradient(135deg, #10b981, #059669);
    --gradient-shine: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    
    /* ===== BORDER & OPACITY VALUES ===== */
    /* Consistent border widths and opacity levels */
    --border-width-thin: 1px;
    --border-width-medium: 2px;
    --border-width-thick: 3px;
    --opacity-overlay: 0.1;
    --opacity-text-secondary: 0.9;
    --opacity-disabled: 0.6;
    
    /* ===== Z-INDEX LAYERS ===== */
    /* Stacking context management */
    --z-index-base: 1;
    --z-index-overlay: 2;
    --z-index-floating: 3;
  }

  /* ========================================
   * MAIN LAYOUT COMPONENTS
   * Core structure and positioning
   * ======================================== */
  .home-section {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    padding: var(--section-padding);
    padding-top: calc(var(--section-padding) + var(--floating-header-offset));
    background: linear-gradient(135deg, var(--color-bg-primary) 0%, var(--color-bg-secondary) 100%);
    perspective: var(--card-perspective);
  }
  
  .card-container {
    position: relative;
    /* iOS Safari 3D context fix */
    -webkit-perspective: var(--card-perspective);
    perspective: var(--card-perspective);
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;
  }
  
  /* ========================================
   * 3D CARD COMPONENT
   * Main business card with flip functionality and WebKit compatibility
   * ======================================== */
  .business-card {
    width: var(--card-width);
    height: var(--card-height);
    position: relative;
    transform-style: preserve-3d;
    -webkit-transform-style: preserve-3d; /* WebKit specific */
    transition: var(--transition-card);
    cursor: pointer;
    transform: perspective(var(--card-perspective)) 
               rotateY(var(--card-idle-rotate-y)) 
               rotateX(var(--card-idle-rotate-x));
    /* Additional WebKit/Safari fixes for iOS */
    -webkit-transform: perspective(var(--card-perspective)) 
                      rotateY(var(--card-idle-rotate-y)) 
                      rotateX(var(--card-idle-rotate-x));
    /* Force hardware acceleration for better performance on iOS */
    will-change: transform;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  .business-card:hover {
    transform: perspective(var(--card-perspective)) 
               rotateY(var(--card-hover-rotate-y)) 
               rotateX(var(--card-hover-rotate-x)) 
               scale(var(--card-hover-scale));
    -webkit-transform: perspective(var(--card-perspective)) 
                      rotateY(var(--card-hover-rotate-y)) 
                      rotateX(var(--card-hover-rotate-x)) 
                      scale(var(--card-hover-scale));
  }
  
  .business-card.flipped {
    transform: perspective(var(--card-perspective)) 
               rotateY(var(--card-flipped-rotate-y)) 
               rotateX(var(--card-idle-rotate-x));
    -webkit-transform: perspective(var(--card-perspective)) 
                      rotateY(var(--card-flipped-rotate-y)) 
                      rotateX(var(--card-idle-rotate-x));
  }
  
  .business-card.flipped:hover {
    transform: perspective(var(--card-perspective)) 
               rotateY(var(--card-flipped-hover-rotate-y)) 
               rotateX(var(--card-hover-rotate-x)) 
               scale(var(--card-hover-scale));
    -webkit-transform: perspective(var(--card-perspective)) 
                      rotateY(var(--card-flipped-hover-rotate-y)) 
                      rotateX(var(--card-hover-rotate-x)) 
                      scale(var(--card-hover-scale));
  }
  
  /* ========================================
   * CARD SIDES - FRONT & BACK
   * Common styles for both card faces with WebKit fix
   * ======================================== */
  .card-front,
  .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden; /* WebKit specific fix */
    border-radius: var(--card-border-radius);
    box-shadow: var(--shadow-card);
    background: var(--color-bg-primary);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    /* Additional WebKit/Safari fixes for iOS */
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;
    -webkit-perspective: 1000px;
    perspective: 1000px;
  }
  
  .card-back {
    transform: rotateY(180deg);
    background: linear-gradient(135deg, var(--color-bg-primary) 0%, var(--color-bg-secondary) 100%);
  }
  
  /* ========================================
   * CARD HEADER COMPONENT
   * Top section with branding and flip hint
   * ======================================== */
  .card-header {
    background: var(--gradient-header);
    padding: var(--header-padding);
    min-height: var(--header-min-height);
    display: flex;
    align-items: center;
    gap: var(--element-gap);
    position: relative;
    overflow: hidden;
  }
  
  .back-header {
    background: var(--gradient-back-header);
  }
  
  /* Animated shine effect across header - visual enhancement */
  .card-header::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 100%;
    height: 100%;
    background: var(--gradient-shine);
    transform: rotate(45deg);
    animation: shine var(--animation-duration-shine) infinite;
    z-index: var(--z-index-overlay);
  }
  
  /* ========================================
   * KEYFRAME ANIMATIONS
   * Reusable animation definitions for visual effects
   * ======================================== */
  
  /* Subtle shine effect that moves across elements */
  @keyframes shine {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    50% { transform: translateX(100%) translateY(100%) rotate(45deg); }
    100% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
  }
  
  /* Breathing pulse effect for attention-drawing elements */
  @keyframes pulse {
    0%, 100% { opacity: 0.8; }
    50% { opacity: 1; }
  }
  
  /* Smooth continuous rotation for interactive icons */
  @keyframes rotate {
    0%, 100% { transform: rotate(0deg); }
    50% { transform: rotate(180deg); }
  }
  
  /* ========================================
   * INTERACTIVE FLIP HINT COMPONENT
   * User guidance for card interaction with adaptive text
   * ======================================== */
  .flip-hint {
    position: absolute;
    top: 50%;
    right: var(--element-gap);
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    color: rgba(255, 255, 255, var(--opacity-text-secondary));
    font-size: var(--text-flip-hint);
    font-weight: 600;
    text-align: center;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
    animation: pulse var(--animation-duration-pulse) infinite;
    cursor: pointer;
    user-select: none;
    width: 70px;
    line-height: 1.1;
    z-index: var(--z-index-floating);
  }
  
  .flip-icon {
    font-size: var(--flip-icon-size);
    margin-top: 0.3rem;
    animation: rotate var(--animation-duration-rotate) ease-in-out infinite;
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
  }
  
  /* ========================================
   * LOGO AND BRANDING COMPONENTS
   * Profile photos, company logos, and QR code elements
   * ======================================== */
  .company-logo,
  .back-logo {
    position: relative;
    z-index: var(--z-index-base);
  }
  
  /* Circular logo container with glassmorphism effect */
  .logo-circle {
    width: var(--logo-size);
    height: var(--logo-size);
    background: rgba(255, 255, 255, 0.2);
    border: var(--border-width-medium) solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: white;
    font-size: 1.2rem;
    backdrop-filter: blur(10px);
    overflow: hidden;
  }
  
  .logo-circle img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
  }
  
  /* QR code container - placeholder for future implementation */
  .qr-code {
    width: var(--logo-size);
    height: var(--logo-size);
    background: rgba(255, 255, 255, 0.9);
    border-radius: 8px;
    position: relative;
    overflow: hidden;
  }
  
  /* Mock QR pattern using CSS gradients */
  .qr-pattern {
    position: absolute;
    inset: 4px;
    background: #000;
    background-image: 
      repeating-linear-gradient(0deg, transparent 0px, transparent 2px, #000 2px, #000 4px),
      repeating-linear-gradient(90deg, transparent 0px, transparent 2px, #000 2px, #000 4px);
    opacity: 0.8;
  }
  
  /* ========================================
   * TYPOGRAPHY COMPONENTS
   * Consistent text styling for all content sections
   * ======================================== */
  .company-info,
  .back-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    color: white;
  }
  
  .company-name {
    font-size: var(--text-company-name);
    font-weight: bold;
    margin: 0;
    color: var(--color-text-primary);
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  }
  
  .back-title {
    font-size: var(--text-company-name);
    font-weight: bold;
    margin: 0;
    color: white;
  }
  
  /* ========================================
   * CARD BODY - MAIN CONTENT AREA
   * Central content section with profile info
   * ======================================== */
  .card-body {
    padding: var(--body-padding);
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  
  .profile-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  
  /* Professional profile photo with enhanced styling */
  .profile-photo {
    width: var(--profile-photo-size);
    height: var(--profile-photo-size);
    border-radius: var(--profile-photo-border-radius);
    overflow: hidden;
    margin-bottom: var(--element-gap-large);
    border: var(--border-width-thick) solid var(--color-border);
    box-shadow: var(--shadow-element);
    position: relative;
  }
  
  /* Subtle highlight overlay for photo */
  .profile-photo::before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--gradient-shine);
    pointer-events: none;
    z-index: var(--z-index-overlay);
  }
  
  .profile-photo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .profile-info {
    width: 100%;
  }
  
  /* Employee name with enhanced typography */
  .employee-name {
    font-size: var(--text-employee-name);
    font-weight: 700;
    margin: 0 0 var(--element-gap-small) 0;
    color: var(--color-text-primary);
    letter-spacing: -0.02em;
  }
  
  /* Employee role with accent styling */
  .employee-role {
    font-size: var(--text-employee-role);
    font-weight: 500;
    margin: 0 0 var(--element-gap) 0;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  /* Employee ID badge with monospace styling */
  .employee-id {
    font-size: var(--text-employee-id);
    color: var(--color-text-secondary);
    font-family: 'Courier New', monospace;
    background: var(--color-bg-secondary);
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    display: inline-block;
    border: var(--border-width-thin) solid var(--color-border);
  }
  
  /* ========================================
   * QR CODE SECTION - BACK SIDE
   * Interactive QR code for portfolio access
   * ======================================== */
  .qr-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: var(--element-gap-large);
  }
  
  /* QR code container with professional styling */
  .qr-placeholder {
    width: var(--qr-placeholder-size);
    height: var(--qr-placeholder-size);
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--color-bg-primary);
    border: var(--border-width-medium) solid var(--color-border);
    border-radius: var(--qr-border-radius);
    margin-bottom: 0.8rem;
    position: relative;
    overflow: hidden;
    padding: 0.5rem;
    transition: var(--transition-hover);
  }
  
  /* QR code image with optimized display */
  .qr-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    border-radius: 8px;
  }
  
  /* Hover effect for QR container */
  .qr-placeholder:hover {
    transform: scale(1.02);
    box-shadow: var(--shadow-hover);
  }
  
  /* Instructional text for QR code usage */
  .qr-instruction {
    font-size: var(--text-qr-instruction);
    color: var(--color-text-secondary);
    text-align: center;
    font-style: italic;
    margin: 0;
    line-height: 1.3;
  }
  
  /* ========================================
   * PERSONAL INFO SECTION - BACK SIDE
   * Professional highlights and personal details
   * ======================================== */
  .personal-info {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }
  
  /* Individual info item with hover effects */
  .info-item {
    display: flex;
    align-items: flex-start;
    padding: 0.6rem 1rem;
    background: var(--color-bg-secondary);
    border-radius: 10px;
    border-left: var(--border-width-thick) solid var(--color-accent);
    transition: var(--transition-hover);
    position: relative;
    overflow: hidden;
  }
  
  /* Subtle shine overlay for info items */
  .info-item::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, transparent, rgba(255, 255, 255, var(--opacity-overlay)), transparent);
    pointer-events: none;
    z-index: var(--z-index-overlay);
  }
  
  /* Hover effect for info items */
  .info-item:hover {
    transform: translateX(2px);
    box-shadow: var(--shadow-contact-btn);
  }
  
  /* Text content within info items */
  .info-text {
    font-size: var(--text-info-item);
    color: var(--color-text-primary);
    font-weight: 500;
    line-height: 1.4;
    margin: 0;
  }
  
  /* ========================================
   * CARD FOOTER - CONTACT & SECURITY
   * Bottom section with contact links and security elements
   * ======================================== */
  .card-footer {
    background: var(--color-bg-secondary);
    padding: var(--footer-padding);
    margin-top: auto;
  }
  
  /* Contact button container with consistent spacing */
  .contact-links {
    display: flex;
    gap: var(--element-gap);
    margin-bottom: var(--element-gap-large);
  }
  
  /* ========================================
   * CONTACT BUTTONS COMPONENT
   * Interactive social media and contact links
   * ======================================== */
  
  /* Base contact button styling with glassmorphism effect */
  .contact-btn {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--element-gap-small);
    padding: var(--contact-btn-padding);
    border-radius: 10px;
    background: var(--color-bg-primary);
    border: var(--border-width-thin) solid var(--color-border);
    color: var(--color-text-primary);
    font-size: var(--text-contact-btn);
    font-weight: 500;
    text-decoration: none;
    transition: var(--transition-hover);
    position: relative;
    overflow: hidden;
  }
  
  /* Animated shine effect on hover */
  .contact-btn::before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--gradient-shine);
    transform: translateX(-100%);
    transition: var(--transition-hover);
    z-index: var(--z-index-overlay);
  }
  
  .contact-btn:hover::before {
    transform: translateX(100%);
  }
  
  /* General hover effects for all contact buttons */
  .contact-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-element);
    border-color: var(--color-accent);
  }
  
  /* Platform-specific branding colors on hover */
  .contact-btn.linkedin:hover {
    background: #0077b5;
    color: white;
    border-color: #0077b5;
  }
  
  .contact-btn.github:hover {
    background: #333;
    color: white;
    border-color: #333;
  }
  
  /* Contact button icons with smooth transitions */
  .contact-btn img {
    width: var(--contact-icon-size);
    height: var(--contact-icon-size);
    filter: var(--icon-filter, none);
    transition: var(--transition-hover);
  }
  
  /* Icon color inversion on hover for better contrast */
  .contact-btn:hover img {
    filter: brightness(0) invert(1);
  }
  
  /* ========================================
   * CONTACT DETAILS SECTION - BACK SIDE
   * Location and work mode information
   * ======================================== */
  
  /* Contact details container */
  .contact-details {
    margin-bottom: var(--element-gap-large);
  }
  
  /* Individual contact detail items */
  .contact-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--element-gap-small);
    font-size: var(--text-contact-item);
  }
  
  /* Contact item labels */
  .contact-label {
    color: var(--color-text-secondary);
    font-weight: 500;
  }
  
  /* Contact item values with emphasis */
  .contact-value {
    color: var(--color-text-primary);
    font-weight: 600;
  }
  
  /* ========================================
   * SECURITY ELEMENTS
   * Authentication chips, badges, and verification components
   * ======================================== */
  .card-security {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-top: 0.7rem;
    border-top: var(--border-width-thin) solid var(--color-border);
  }
  
  /* Security chip component (front side) - simulates smart card chip */
  .security-chip {
    width: var(--security-chip-width);
    height: var(--security-chip-height);
    background: var(--gradient-security-chip);
    border-radius: 4px;
    position: relative;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.2);
  }
  
  /* Inner chip detail for realistic effect */
  .security-chip::before {
    content: '';
    position: absolute;
    inset: 2px;
    background: linear-gradient(135deg, #ffed4e, #ffd700);
    border-radius: 2px;
  }
  
  /* Security text styling */
  .security-text {
    font-size: var(--text-security);
    color: var(--color-text-secondary);
    font-weight: 600;
    letter-spacing: 0.1em;
  }
  
  /* Security badge component (back side) - verification status */
  .security-badge {
    background: var(--gradient-security-badge);
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: var(--text-security);
    font-weight: 600;
    letter-spacing: 0.1em;
  }
  
  /* Badge text with enhanced readability */
  .badge-text {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }
  
  /* Issue date styling */
  .issue-date {
    font-size: var(--text-security);
    color: var(--color-text-secondary);
    font-weight: 600;
  }
  
  /* ========================================
   * RESPONSIVE DESIGN SYSTEM
   * Mobile-first approach with progressive enhancement
   * Consistent with project-wide breakpoint strategy
   * ======================================== */
  
  /* ===== ULTRA NARROW DEVICES (≤320px) ===== */
  /* Galaxy Fold and similar ultra-narrow screens */
  @media (max-width: 320px) {
    :root {
      /* Extremely compact dimensions for ultra narrow screens */
      --card-width: 260px;
      --card-height: 420px;
      --section-padding: 0.25rem;
      --floating-header-offset: 80px;
      --header-padding: 0.75rem 0.5rem;
      --body-padding: 0.6rem 0.5rem;
      --footer-padding: 0.5rem;
      
      /* Minimal component sizes */
      --profile-photo-size: 70px;
      --logo-size: 40px;
      --header-min-height: 60px;
      --qr-placeholder-size: 80px;
      --contact-icon-size: 12px;
      
      /* Typography scaling for narrow screens */
      --text-company-name: 0.9rem;
      --text-employee-name: 1.2rem;
      --text-employee-role: 0.9rem;
      --text-employee-id: 0.75rem;
      --text-flip-hint: 0.65rem;
      --text-contact-btn: 0.65rem;
      --text-security: 0.6rem;
      --text-contact-item: 0.75rem;
      --text-qr-instruction: 0.7rem;
      --text-info-item: 0.75rem;
      --flip-icon-size: 1.4rem;
      
      /* Minimal hover effects for performance */
      --card-hover-scale: 1.005;
      
      /* Disable 3D effects completely for performance */
      --card-idle-rotate-y: 0deg;
      --card-idle-rotate-x: 0deg;
      --card-hover-rotate-y: 0deg;
      --card-hover-rotate-x: 0deg;
    }
    
    /* Component-specific adjustments */
    .flip-hint {
      right: 0.25rem;
      width: 50px;
      line-height: 1.0;
    }
    
    .contact-links {
      gap: 0.25rem;
      margin-bottom: var(--element-gap);
    }
    
    .contact-btn {
      padding: 0.4rem 0.2rem;
      gap: 0.2rem;
    }
    
    .employee-id {
      padding: 0.2rem 0.6rem;
    }
    
    .contact-item {
      margin-bottom: 0.3rem;
    }
    
    .personal-info {
      gap: var(--element-gap-small);
    }
    
    .info-item {
      padding: 0.4rem 0.8rem;
    }
  }
  
  /* ===== SMALL MOBILE DEVICES (321px-480px) ===== */
  /* Compact mobile layout with essential features */
  @media (min-width: 321px) and (max-width: 480px) {
    :root {
      /* Balanced mobile dimensions */
      --card-width: 320px;
      --card-height: 520px;
      --section-padding: 0.5rem;
      --floating-header-offset: 100px;
      --header-padding: 1rem 0.75rem;
      --body-padding: 0.8rem 0.75rem;
      
      /* Optimized mobile component sizes */
      --profile-photo-size: 90px;
      --header-min-height: 70px;
      --qr-placeholder-size: 100px;
      --contact-icon-size: 14px;
      
      /* Mobile-optimized typography */
      --text-company-name: 1rem;
      --text-employee-name: 1.4rem;
      --text-flip-hint: 0.75rem;
      --text-contact-btn: 0.75rem;
      --text-qr-instruction: 0.75rem;
      --text-info-item: 0.8rem;
      --flip-icon-size: 1.6rem;
      --card-hover-scale: 1.01;
      
      /* Performance optimization - disable 3D effects */
      --card-idle-rotate-y: 0deg;
      --card-idle-rotate-x: 0deg;
      --card-hover-rotate-y: 0deg;
      --card-hover-rotate-x: 0deg;
    }
    
    .flip-hint {
      right: var(--element-gap-small);
      width: 60px;
      line-height: 1.0;
    }
    
    .contact-links {
      gap: var(--element-gap-small);
    }
    
    .contact-btn {
      padding: 0.5rem 0.3rem;
      gap: 0.3rem;
    }
    
    .personal-info {
      gap: 0.6rem;
    }
    
    .info-item {
      padding: 0.5rem 0.8rem;
    }
  }
  
  /* ===== MEDIUM MOBILE/TABLET (481px-768px) ===== */
  /* Balanced layout for larger mobile devices and small tablets */
  @media (min-width: 481px) and (max-width: 768px) {
    :root {
      /* Enhanced mobile/tablet dimensions */
      --card-width: 350px;
      --card-height: 550px;
      --section-padding: 0.75rem;
      --floating-header-offset: 120px;
      --header-padding: 1.2rem 1rem;
      --body-padding: 1rem 1rem;
      
      /* Balanced component sizing */
      --profile-photo-size: 100px;
      --header-min-height: 75px;
      --qr-placeholder-size: 110px;
      --contact-icon-size: 16px;
      
      /* Typography refinements */
      --text-company-name: 1.1rem;
      --text-employee-name: 1.6rem;
      --text-flip-hint: 0.8rem;
      --text-contact-btn: 0.8rem;
      --text-qr-instruction: 0.8rem;
      --text-info-item: 0.85rem;
      --card-hover-scale: 1.02;
      
      /* Minimal 3D effects for tablets */
      --card-idle-rotate-y: 0deg;
      --card-idle-rotate-x: 0deg;
      --card-hover-rotate-y: 0deg;
      --card-hover-rotate-x: 0deg;
    }
    
    .flip-hint {
      right: 0.75rem;
      width: 65px;
      line-height: 1.1;
    }
    
    .contact-links {
      gap: 0.75rem;
    }
    
    .contact-btn {
      padding: 0.6rem 0.4rem;
    }
    
    .personal-info {
      gap: 0.7rem;
    }
    
    .info-item {
      padding: 0.55rem 0.9rem;
    }
  }
  
  /* ===== LARGE TABLET (769px-1024px) ===== */
  /* Enhanced tablet experience with full features */
  @media (min-width: 769px) and (max-width: 1024px) {
    :root {
      /* Full-featured tablet dimensions */
      --card-width: 380px;
      --card-height: 580px;
      --section-padding: 1.5rem;
      --floating-header-offset: 140px;
      --header-padding: 1.4rem 1.25rem;
      --body-padding: 1.2rem 1.25rem;
      
      /* Enhanced component sizes */
      --profile-photo-size: 110px;
      --header-min-height: 80px;
      
      /* Refined typography for larger screens */
      --text-company-name: 1.15rem;
      --text-employee-name: 1.7rem;
      --text-flip-hint: 0.85rem;
    }
  }
  
  /* ========================================
   * DARK MODE ENHANCEMENTS
   * Theme-specific visual adjustments
   * ======================================== */
  .dark .card-front,
  .dark .card-back {
    box-shadow: 
      0 20px 40px rgba(0, 0, 0, 0.4),
      0 0 0 1px var(--color-border),
      inset 0 1px 0 rgba(255, 255, 255, 0.05);
  }
  
  /* ========================================
   * WEBKIT/SAFARI iOS SPECIFIC FIXES
   * Fixes for 3D transform bugs on mobile Safari
   * ======================================== */
  
  /* Force proper layering and backface visibility on WebKit */
  @supports (-webkit-transform-style: preserve-3d) {
    .business-card .card-front {
      z-index: 2;
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden;
    }
    
    .business-card .card-back {
      z-index: 1;
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden;
    }
    
    .business-card.flipped .card-front {
      z-index: 1;
    }
    
    .business-card.flipped .card-back {
      z-index: 2;
    }
  }
  
  /* Additional iOS Safari specific fixes */
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .business-card {
      /* Force GPU acceleration on high-DPI iOS devices */
      -webkit-transform: translateZ(0);
      transform: translateZ(0);
    }
    
    .card-front,
    .card-back {
      /* Prevent content bleeding on iOS */
      -webkit-transform: translateZ(0);
      transform: translateZ(0);
      isolation: isolate;
    }
  }
</style>
